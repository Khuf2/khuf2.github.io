#gallContent {
  display: grid;
  margin: 20px 50px 20px 50px;
  grid-column-gap: 20px;
  grid-template-areas: 
  "sidepanel gallery";
}

#indexContent {
  display: grid;
  margin: 20px 50px 20px 50px;
  grid-column-gap: 20px;
  grid-template-columns: min-content auto;
  grid-template-areas: 
  "sidepanel coverstyle";
}

#bioContent {
  display: grid;
  margin: 20px 50px 20px 50px;
  grid-column-gap: 20px;
  grid-template-columns: min-content auto;
  grid-template-areas: 
  "sidepanel bio";
}

.gallery {
  grid-area: gallery;
  padding: 15px 10px 15px 10px;
  text-align: center;
  background-color: rgba(var(--color2), 0.8);
  overflow-x: hidden;
  animation: fadein 2s;
  -moz-animation: fadein 2s; /* Firefox */
  -webkit-animation: fadein 2s; /* Safari and Chrome */
  -o-animation: fadein 2s; /* Opera */
}

#myBtnContainer {
  animation: fadein 2s;
  -moz-animation: fadein 2s; /* Firefox */
  -webkit-animation: fadein 2s; /* Safari and Chrome */
  -o-animation: fadein 2s; /* Opera */

  display:flex; 
  justify-content: center; 
  background-color: rgba(var(--color1), 0.5); 
  padding: 10px; 
  border: 3px solid rgba(var(--color2), 0.8); 
  border-radius: 8px;
}

.gallery img {
  transition: filter 0.1s, transform 0.1s, width 0.7s, height 0.7s, padding 0.7s;
  background-color: rgba(var(--color1), 0.8);
  padding: 15px;
  margin: 2px;
  height: 200px;
  width: 200px;
  border-radius: 20%;
}

.gallery img:hover {
  filter: contrast(200%);
  transform: scale(1.1);
}

.row {
  background-color: rgba(var(--color2), 0.8);
  display: flex;
  flex-wrap: wrap;
}

/* Add padding BETWEEN each column */
.row,
.row > .column {
  padding: 10px 0px;
  justify-content: center;
}

/* Create three equal columns that floats next to each other */
.column {
  align-content: center;
  max-width: 25%;
  flex: 50%;
  display: none; /* Hide all elements by default */
}

/* Clear floats after rows */ 
.row:after {
  content: "";
  display: table;
  clear: both;
}

/* The "show" class is added to the filtered elements */
.show {
  display: block;
}

.btn {
  color: white;
  cursor: pointer;
  display: block;
  padding: 10px;
  margin: 10px 10px;
  font-size:10px;
  font-weight: 400;
  line-height: 15px;
  max-width: 160px; 
  position: relative;
  text-decoration: none;
  text-transform: uppercase;
  width: 100%; 
  @media(min-width: 600px) {
      margin: 0 1em 2em;
  }
}

.btn-5 {
  background-color: rgba(var(--color1), 0.5);
  border: 0 solid;
  box-shadow: inset 0 0 20px rgba(255, 255, 255, 0);
  outline: 1px solid;
  outline-color: rgba(255, 255, 255, .5);
  outline-offset: 0px;
  text-shadow: none;
  transition: all 1250ms cubic-bezier(0.19, 1, 0.22, 1);
} 

.btn-5:hover {
  border: 1px solid;
  border-color: rgba(var(--color2), 0.8);
  box-shadow: inset 0 0 20px rgba(255, 255, 255, .5), 0 0 20px rgba(255, 255, 255, .2);
  outline-color: rgba(255, 255, 255, 0);
  outline-offset: 15px;
  text-shadow: 1px 1px 2px #427388; 
}

.btn.active {
  background-color: rgba(var(--color2), 0.8);
  color: black;
}

@media screen and (max-width: 1200px) {
  .column {
    flex: 33.33%;
    max-width: 33.33%;
  }
}

@media screen and (max-width: 1000px) {
  .column {
    flex: 50%;
    max-width: 50%;
  }
}

@media screen and (max-width: 900px) {
  .column {
    flex: 100%;
    max-width: 100%;
  }
}

/*
 * Somehow I need to take into account if the sidebar is open
 * and produce a the same output for that possibility but with
 * a different max-width value.
 *
var width = (window.innerWidth > 0) ? window.innerWidth : screen.width;
 *
 */